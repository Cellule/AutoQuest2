local core, module = AutoQuest2, AutoQuest2.trackingmodule["MINIMAP_UPDATE_TRACKING"] = function(...)    -- variable ... is (event, arg1, arg2, arg3, etc)    if ( not core.db or module.internal) then        module.internal = false;        return;    end    if ( core.db.profile.tracking_trivial ) then		core.db.profile.trivial = core:GetTrackingByName(MINIMAP_TRACKING_TRIVIAL_QUESTS)    end    module.internal = false;    core:RefreshConfig()endfunction core:InitializeTracking()    if ( core.db.profile.tracking_trivial ) then        core:ToggleTrivialTracking(core.db.profile["trivial"])    endend------------------------------------------------------------------------------------------------------ Initialize ------------------------------------------------------------------------------------------------------function module:OnEnable()    module.internal = false;    self:RegisterEvent("MINIMAP_UPDATE_TRACKING");    core:InitializeTracking()endfunction module:OnDisable()    self:UnregisterAllEvents();    core:InitializeTracking()end----------------------------------------------------------------------------------------------------- Events -----------------------------------------------------------------------------------------------------function module:Tracking_OnEvent(event, ...)end------------------------------------------------------------------------------------------------------ Global Functions ------------------------------------------------------------------------------------------------------function core:ToggleTrivial(value)    core.db.profile.trivial = value;    if ( core.db.profile.tracking_trivial ) then        core:ToggleTrivialTracking(value)    endendfunction core:ToggleTrivialTracking(value)    core:SetTrackingByName(MINIMAP_TRACKING_TRIVIAL_QUESTS, value);endfunction core:SetTrackingByName(trackingName, state)    local i = 1    local numTracking = GetNumTrackingTypes()    while GetTrackingInfo(i) do        local name, texture, active, category = GetTrackingInfo(i)        if ( name == trackingName ) then			if state then				SetTracking(i,1);			else				SetTracking(i,nil);			end            return;        end        i = i + 1;    endendfunction core:GetTrackingByName(trackingName)    local i = 1    local numTracking = GetNumTrackingTypes()    while GetTrackingInfo(i) do        local name, texture, active, category = GetTrackingInfo(i)        if ( name == trackingName ) then			return active;        end        i = i + 1;    endend----------------------------------------------------------------------------------------------------- Options -----------------------------------------------------------------------------------------------------local IsDisabled = function()    return not core:IsEnabled()endlocal IsOverride = function()    return not core.db.profile.overrideendlocal get = function(info)    return info.arg and core.db.profile[info.arg] or core.db.profile[info[#info]]endlocal set = function(info, value)    local key = info.arg or info[#info]    core.db.profile[key] = valueendcore.options["Display"].args.tracking = {    order = 20,    name = "MiniMap Tracking",    type = "group",    disabled = IsDisabled,    guiInline = true,    args = {        tracking_trivial = {            order = 1,            name = "Auto Toggle Trivial Quests",            desc = "Automatically track Low Level Quests when 'Trivial Quests' is toggled and visa-versa",            type = "toggle",            width = "full",            get = get,            set = function(info, value)                local key = info.arg or info[#info]                core.db.profile[key] = value,                core:ToggleModule("Tracking", value)            end,        },    }}